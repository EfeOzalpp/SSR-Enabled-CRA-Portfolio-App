{"version":3,"file":"dynamic-shadow.server.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAmD;AAClB;AACwC;AAAA;AAIzE,MAAMO,WAA4B,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,+CAAQ,CAAqB,IAAI,CAAC;EAE9DD,gDAAS,CAAC,MAAM;IACd,IAAI,OAAOU,QAAQ,KAAK,WAAW,EAAE;IAErC,MAAMC,SAAS,GAAGD,QAAQ,CAACE,cAAc,CAACL,OAAO,CAAC;IAClD,IAAI,CAACI,SAAS,EAAE;IAEhB,MAAME,OAAO,GAAGA,CAAA,KAAM;MACpB,MAAMC,OAAO,GAAGH,SAAS,CAACI,aAAa,CAAc,iBAAiB,CAAC,IAAI,IAAI;MAC/E,IAAID,OAAO,EAAE;QACXL,SAAS,CAACK,OAAO,CAAC;QAClB,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IAED,IAAID,OAAO,CAAC,CAAC,EAAE;IAEf,MAAMG,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,MAAM;MAC1C,IAAIJ,OAAO,CAAC,CAAC,EAAEG,QAAQ,CAACE,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;IACFF,QAAQ,CAACG,OAAO,CAACR,SAAS,EAAE;MAAES,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAC/D,OAAO,MAAML,QAAQ,CAACE,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;;EAEb;EACAP,gDAAS,CAAC,MAAM;IACd,IAAI,CAACQ,MAAM,EAAE;IAEb,MAAMc,MAAM,GAAG;MAAEC,EAAE,EAAEf,MAAM;MAAED;IAAQ,CAAC;IACtC,MAAMiB,UAAU,GAAG,IAAIC,WAAW,CAAC,sBAAsB,EAAE;MAAEH;IAAO,CAAC,CAAC;IACtEI,MAAM,CAACC,aAAa,CAACH,UAAU,CAAC;IAEhC,OAAO,MAAM;MACX,MAAMI,YAAY,GAAG,IAAIH,WAAW,CAAC,wBAAwB,EAAE;QAAEH;MAAO,CAAC,CAAC;MAC1EI,MAAM,CAACC,aAAa,CAACC,YAAY,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACpB,MAAM,EAAED,OAAO,CAAC,CAAC;EAErB,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;EACxB,oBAAON,6DAAqB,CAACG,+DAAA,CAACF,2EAAiB;IAAC2B,aAAa,EAAEA,CAAA,KAAM,CAAC;EAAE,CAAE,CAAC,EAAEtB,MAAM,CAAC;AACtF,CAAC;AAED,iEAAeF,WAAW,E;;;;;;;;;;;;;;;;ACnD1B;AAC4C;AAErC,SAASyB,qBAAqBA,CAAA,EAAG;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhC,+CAAQ,CAAC,KAAK,CAAC;EAEvDD,gDAAS,CAAC,MAAM;IACd,MAAMkC,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,KAAK,GAAGC,SAAS,CAACC,cAAc,GAAG,CAAC;MAC1C,MAAMC,MAAM,GAAGZ,MAAM,CAACa,UAAU,GAAG,mBAAmB,CAAC,CAACC,OAAO,IAAI,KAAK;MACxE,MAAMC,KAAK,GAAGf,MAAM,CAACgB,UAAU;MAC/B,MAAMC,EAAE,GAAGP,SAAS,CAACQ,SAAS,IAAIR,SAAS,CAACS,MAAM,IAAKnB,MAAM,CAASoB,KAAK;;MAE3E;MACA,MAAMC,KAAK,GAAG,kBAAkB,CAACC,IAAI,CAACL,EAAE,CAAC,IACtCP,SAAS,CAACa,QAAQ,KAAK,UAAU,IAAId,KAAM,CAAC,CAAC;;MAEhD;MACA,MAAMe,SAAS,GAAG,SAAS,CAACF,IAAI,CAACL,EAAE,CAAC;;MAEpC;MACA;MACA;MACA,MAAMQ,UAAU,GACbhB,KAAK,IAAIM,KAAK,IAAI,IAAI,IACvBM,KAAK,IACLG,SAAS,IACTZ,MAAM;MAERL,eAAe,CAACkB,UAAU,CAAC;IAC7B,CAAC;IAEDjB,WAAW,CAAC,CAAC;IACbR,MAAM,CAAC0B,gBAAgB,CAAC,QAAQ,EAAElB,WAAW,CAAC;IAC9CR,MAAM,CAAC0B,gBAAgB,CAAC,mBAAmB,EAAElB,WAAW,CAAC;IAEzD,OAAO,MAAM;MACXR,MAAM,CAAC2B,mBAAmB,CAAC,QAAQ,EAAEnB,WAAW,CAAC;MACjDR,MAAM,CAAC2B,mBAAmB,CAAC,mBAAmB,EAAEnB,WAAW,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,YAAY;AACrB,C","sources":["webpack://personal-site/./src/components/dynamic-app/shadow-entry.tsx","webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DynamicAppInbound from '../../dynamic-app/dynamic-app-shadow.jsx';\r\n\r\ntype Props = { blockId: string };\r\n\r\nconst ShadowEntry: React.FC<Props> = ({ blockId }) => {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof document === 'undefined') return;\r\n\r\n    const container = document.getElementById(blockId);\r\n    if (!container) return;\r\n\r\n    const tryFind = () => {\r\n      const overlay = container.querySelector<HTMLElement>('.screen-overlay') || null;\r\n      if (overlay) {\r\n        setTarget(overlay);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (tryFind()) return;\r\n\r\n    const observer = new MutationObserver(() => {\r\n      if (tryFind()) observer.disconnect();\r\n    });\r\n    observer.observe(container, { childList: true, subtree: true });\r\n    return () => observer.disconnect();\r\n  }, [blockId]);\r\n\r\n  // NEW: announce mount/unmount of the embedded scroll container to the outer controller\r\n  useEffect(() => {\r\n    if (!target) return;\r\n\r\n    const detail = { el: target, blockId };\r\n    const mountedEvt = new CustomEvent('embedded-app:mounted', { detail });\r\n    window.dispatchEvent(mountedEvt);\r\n\r\n    return () => {\r\n      const unmountedEvt = new CustomEvent('embedded-app:unmounted', { detail });\r\n      window.dispatchEvent(unmountedEvt);\r\n    };\r\n  }, [target, blockId]);\r\n\r\n  if (!target) return null;\r\n  return ReactDOM.createPortal(<DynamicAppInbound onFocusChange={() => {}} />, target);\r\n};\r\n\r\nexport default ShadowEntry;\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["React","useEffect","useState","ReactDOM","DynamicAppInbound","jsx","_jsx","ShadowEntry","blockId","target","setTarget","document","container","getElementById","tryFind","overlay","querySelector","observer","MutationObserver","disconnect","observe","childList","subtree","detail","el","mountedEvt","CustomEvent","window","dispatchEvent","unmountedEvt","createPortal","onFocusChange","useRealMobileViewport","isRealMobile","setIsRealMobile","checkMobile","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","realMobile","addEventListener","removeEventListener"],"sourceRoot":""}