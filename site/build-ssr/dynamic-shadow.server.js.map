{"version":3,"file":"dynamic-shadow.server.js","mappings":"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","sources":["webpack://personal-site/./src/components/dynamic-app/shadow-entry.tsx","webpack://personal-site/./src/dynamic-app/lib/fetchSVGIcons.js","webpack://personal-site/./src/dynamic-app/lib/fetchUser.js","webpack://personal-site/./src/dynamic-app/preload-dynamic-app.ts","webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["// src/components/dynamic-app/shadow-entry.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DynamicAppInbound from '../../dynamic-app/dynamic-app-shadow.jsx';\r\n\r\ntype Props = { blockId: string };\r\n\r\nconst ShadowEntry: React.FC<Props> = ({ blockId }) => {\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof document === 'undefined') return;\r\n\r\n    const container = document.getElementById(blockId);\r\n    if (!container) return;\r\n\r\n    const tryFind = () => {\r\n      const overlay = container.querySelector<HTMLElement>('.screen-overlay') || null;\r\n      if (overlay) {\r\n        setTarget(overlay);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (tryFind()) return;\r\n\r\n    const observer = new MutationObserver(() => {\r\n      if (tryFind()) observer.disconnect();\r\n    });\r\n    observer.observe(container, { childList: true, subtree: true });\r\n    return () => observer.disconnect();\r\n  }, [blockId]);\r\n\r\n  // Announce mount/unmount of the embedded scroll container to the outer controller\r\n  useEffect(() => {\r\n    if (!target) return;\r\n    const detail = { el: target, blockId };\r\n    window.dispatchEvent(new CustomEvent('embedded-app:mounted', { detail }));\r\n    return () => {\r\n      window.dispatchEvent(new CustomEvent('embedded-app:unmounted', { detail }));\r\n    };\r\n  }, [target, blockId]);\r\n\r\n  // Called by DynamicAppInbound (guarded there) on first paint\r\n  const handleReady = () => {\r\n    // hide any SSR/client spinner if present\r\n    const loader = document.getElementById('dynamic-overlay-loader');\r\n    if (loader) loader.style.display = 'none';\r\n    // notify listeners (e.g. enhancer / other logic)\r\n    window.dispatchEvent(new CustomEvent('dynamic-app:hydrated'));\r\n  };\r\n\r\n  if (!target) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <DynamicAppInbound onFocusChange={() => {}} onReady={handleReady} />,\r\n    target\r\n  );\r\n};\r\n\r\nexport default ShadowEntry;\r\n","/* Fetch SVG icons */\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport default async function fetchSVGIcons() {\r\n  const query = `*[_type == \"svgIcon\"]{\r\n    title,\r\n    icon,                         // inline SVG string (portable text / string)\r\n    \"url\": file.asset->url        // optional file URL if present in schema\r\n  }`;\r\n  const icons = await sanityClient.fetch(query);\r\n  return icons;\r\n}","// lib/fetchUser.ts\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport const fetchImages = async (sortOption = 'default') => {\r\n  let orderClause = '';\r\n  switch (sortOption) {\r\n    case 'titleAsc':  orderClause = '| order(title asc)'; break;\r\n    case 'titleDesc': orderClause = '| order(title desc)'; break;\r\n    case 'dateAsc':   orderClause = '| order(_createdAt asc)'; break;\r\n    case 'dateDesc':  orderClause = '| order(_createdAt desc)'; break;\r\n  }\r\n\r\n  const query = `*[_type == \"imageAsset\"] ${orderClause} {\r\n    _id,\r\n    title,\r\n    description,\r\n    image1,         // keep full Sanity image object\r\n    image2,         // same\r\n    caption1,\r\n    alt1,\r\n    alt2,\r\n    iconName\r\n  }`;\r\n\r\n  try {\r\n    const data = await sanityClient.fetch(query);\r\n    return data; // pass raw; AppMedia will render responsively\r\n  } catch (error) {\r\n    console.error('Error fetching images', error);\r\n    return [];\r\n  }\r\n};\r\n","// src/dynamic-app/preload-dynamic-app.ts\r\nimport fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type Cache = { icons?: Record<string, string>; images?: any[] };\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: Cache = {};\r\nlet inFlight: Promise<Cache> | null = null;\r\n\r\nexport function getPreloadedDynamicApp(): Cache {\r\n  return cache;\r\n}\r\n\r\nexport function primeFromSSR(data?: Partial<Cache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return list.reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url; // inline SVG takes precedence; else URL\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\n/** Wait for current preloading (if any), then return cache */\r\nexport async function whenDynamicPreloadReady(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nexport async function ensureIconsPreload(): Promise<Record<string, string>> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown;\r\n  try {\r\n    iconsRaw = await fetchSVGIcons();\r\n  } catch {\r\n    iconsRaw = [];\r\n  }\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\nexport async function ensureImagesPreload(): Promise<any[]> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown;\r\n  try {\r\n    imagesRaw = await fetchImages();\r\n  } catch {\r\n    imagesRaw = [];\r\n  }\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return images;\r\n}\r\n\r\n/** Convenience: ensure both icons + images (with in-flight dedupe) */\r\nexport async function ensureDynamicPreload(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise.all([ensureIconsPreload(), ensureImagesPreload()])\r\n    .then(([icons, images]) => {\r\n      cache = { icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => {\r\n      inFlight = null;\r\n    });\r\n\r\n  return inFlight;\r\n}\r\n\r\n// Optional: hydrate from SSR\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_PRELOAD__?: Cache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_PRELOAD__) {\r\n  primeFromSSR((window as any).__DYNAMIC_PRELOAD__);\r\n}\r\n","// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["React","useEffect","useState","ReactDOM","DynamicAppInbound","jsx","_jsx","ShadowEntry","blockId","target","setTarget","document","container","getElementById","tryFind","overlay","querySelector","observer","MutationObserver","disconnect","observe","childList","subtree","detail","el","window","dispatchEvent","CustomEvent","handleReady","loader","style","display","createPortal","onFocusChange","onReady","sanityClient","fetchSVGIcons","query","icons","fetch","fetchImages","sortOption","orderClause","data","error","console","cache","inFlight","getPreloadedDynamicApp","primeFromSSR","toIconMap","list","reduce","acc","it","title","val","icon","url","length","whenDynamicPreloadReady","images","ensureIconsPreload","iconsRaw","Array","isArray","ensureImagesPreload","imagesRaw","ensureDynamicPreload","Promise","all","then","finally","__DYNAMIC_PRELOAD__","useRealMobileViewport","isRealMobile","setIsRealMobile","checkMobile","touch","navigator","maxTouchPoints","coarse","matchMedia","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","realMobile","addEventListener","removeEventListener"],"sourceRoot":""}