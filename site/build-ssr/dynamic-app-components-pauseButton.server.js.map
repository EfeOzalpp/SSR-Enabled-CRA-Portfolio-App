{"version":3,"file":"dynamic-app-components-pauseButton.server.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAC2D;AACzB,CAAC;AACoB,CAAC;AAAA;AAExD,MAAMQ,WAAW,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAC7C,MAAMC,SAAS,GAAGT,6CAAM,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,+CAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,+CAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErD;EACAC,gDAAS,CAAC,MAAM;IACd,IAAIM,iBAAiB,EAAE;MACrBA,iBAAiB,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,CAACF,iBAAiB,EAAEE,SAAS,CAAC,CAAC;EAElC,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIL,SAAS,CAACM,OAAO,IAAI,CAACL,SAAS,EAAE;MACnC;MACAD,SAAS,CAACM,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;IAC/C;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIR,SAAS,CAACM,OAAO,IAAI,CAACL,SAAS,EAAE;MACnC;MACAD,SAAS,CAACM,OAAO,CAACG,WAAW,CAACN,YAAY,EAAE,IAAI,CAAC;IACnD;EACF,CAAC;EAED,MAAMO,WAAW,GAAIC,KAAK,IAAK;IAC7BA,KAAK,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;;IAEzB,IAAIZ,SAAS,CAACM,OAAO,EAAE;MACrB,IAAIO,WAAW,GAAGZ,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;MACtCD,SAAS,CAACM,OAAO,CAACC,YAAY,CAAC,CAACJ,YAAY,EAAEU,WAAW,CAAC,EAAE,IAAI,CAAC;MACjET,eAAe,CAACS,WAAW,CAAC;MAC5BX,YAAY,CAAC,CAACD,SAAS,CAAC;;MAExB;MACA,IAAIF,iBAAiB,EAAE;QACrBA,iBAAiB,CAAC,CAACE,SAAS,CAAC;MAC/B;IACF;EACF,CAAC;EAED,OACEJ,+DAAA;IACEiB,SAAS,EAAC,kBAAkB;IAC5BC,YAAY,EAAEV,gBAAiB;IAC/BW,YAAY,EAAER,gBAAiB;IAC/BS,OAAO,EAAEP,WAAY,CAAC;IAAA;IAAAQ,QAAA,EAEtBrB,+DAAA,CAACH,qDAAM;MACLM,SAAS,EAAEA,SAAU;MACrBL,aAAa,EAAEA,qDAAc;MAC7BwB,IAAI,EAAE,KAAM,CAAC;MAAA;MACbC,QAAQ,EAAE,KAAM,CAAC;IAAA,CAClB;EAAC,CACC,CAAC;AAEV,CAAC;AAED,iEAAetB,WAAW,E","sources":["webpack://personal-site/./src/dynamic-app/components/pauseButton.jsx"],"sourcesContent":["/* Pause Animation Option - Accessibility */\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport Lottie from 'lottie-react'; // Import Lottie React\r\nimport animationData from '../lottie/pauseButton.json'; // Import your JSON animation\r\n\r\nconst PauseButton = ({ toggleP5Animation }) => {\r\n  const lottieRef = useRef(); // Ref for Lottie animation\r\n  const [isClicked, setIsClicked] = useState(false); // Track click state\r\n  const [currentFrame, setCurrentFrame] = useState(3); // Start at frame 3\r\n\r\n  // Sync initial state with the fireworks rendering logic\r\n  useEffect(() => {\r\n    if (toggleP5Animation) {\r\n      toggleP5Animation(!isClicked); // Initial sync\r\n    }\r\n  }, [toggleP5Animation, isClicked]);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (lottieRef.current && !isClicked) {\r\n      // Play the animation from frame 3 to frame 10 on hover\r\n      lottieRef.current.playSegments([3, 10], true);\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (lottieRef.current && !isClicked) {\r\n      // Pause the animation and leave it at the last hovered frame\r\n      lottieRef.current.goToAndStop(currentFrame, true);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    event.stopPropagation(); // Prevent the event from reaching parent components\r\n  \r\n    if (lottieRef.current) {\r\n      let targetFrame = isClicked ? 3 : 20; // Toggle between frames\r\n      lottieRef.current.playSegments([currentFrame, targetFrame], true);\r\n      setCurrentFrame(targetFrame);\r\n      setIsClicked(!isClicked);\r\n  \r\n      // Notify the parent about the toggle\r\n      if (toggleP5Animation) {\r\n        toggleP5Animation(!isClicked);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className=\"lottie-container\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      onClick={handleClick} // Trigger click behavior\r\n    >\r\n      <Lottie\r\n        lottieRef={lottieRef}\r\n        animationData={animationData}\r\n        loop={false} // Disable looping\r\n        autoplay={false} // Start paused\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PauseButton;\r\n"],"names":["React","useRef","useState","useEffect","Lottie","animationData","jsx","_jsx","PauseButton","toggleP5Animation","lottieRef","isClicked","setIsClicked","currentFrame","setCurrentFrame","handleMouseEnter","current","playSegments","handleMouseLeave","goToAndStop","handleClick","event","stopPropagation","targetFrame","className","onMouseEnter","onMouseLeave","onClick","children","loop","autoplay"],"sourceRoot":""}