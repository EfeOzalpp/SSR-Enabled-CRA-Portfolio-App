{"version":3,"file":"src_utils_media-providers_media-loader_tsx.server.js","mappings":"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","sources":["webpack://personal-site/./src/utils/media-providers/image-upgrade-manager.ts","webpack://personal-site/./src/utils/media-providers/media-loader.tsx","webpack://personal-site/./src/utils/media-providers/video-observer.tsx"],"sourcesContent":["// src/utils/image-upgrade-manager.ts\r\nlet totalImages = 0;\r\nlet loadedLowRes = 0;\r\nlet listeners: (() => void)[] = [];\r\nlet upgradeTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nexport const setUpgradeTimeout = (ms: number = 5000) => {\r\n  if (upgradeTimeout) return;\r\n  upgradeTimeout = setTimeout(() => {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }, ms);\r\n};\r\n\r\nexport const registerImage = () => {\r\n  totalImages++;\r\n  setUpgradeTimeout();\r\n};\r\n\r\nexport const notifyLowResLoaded = () => {\r\n  loadedLowRes++;\r\n  if (loadedLowRes >= totalImages) {\r\n    listeners.forEach(fn => fn());\r\n    listeners = [];\r\n  }\r\n};\r\n\r\nexport const onAllLowResLoaded = (callback: () => void) => {\r\n  listeners.push(callback);\r\n};\r\n","// src/utils/media-providers/media-loader.tsx\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { useVideoVisibility } from './video-observer';\r\nimport LoadingScreen from '../loading/loading';\r\nimport { SanityImageSource } from '@sanity/image-url/lib/types/types';\r\nimport {\r\n  getLowResImageUrl,\r\n  getMediumImageUrl,\r\n  getHighQualityImageUrl,\r\n  urlFor,\r\n} from './image-builder';\r\nimport {\r\n  registerImage,\r\n  notifyLowResLoaded,\r\n  onAllLowResLoaded,\r\n} from './image-upgrade-manager';\r\n\r\nfunction useNearViewport<T extends Element>(\r\n  ref: React.RefObject<T>,\r\n  { rootMargin = '900px 0px', threshold = 0, once = true } = {}\r\n) {\r\n  const [near, setNear] = useState(false);\r\n  useEffect(() => {\r\n    if (!ref.current || near) return;\r\n    const io = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries.some((e) => e.isIntersecting)) {\r\n          setNear(true);\r\n          if (once) io.disconnect();\r\n        }\r\n      },\r\n      { rootMargin, threshold }\r\n    );\r\n    io.observe(ref.current);\r\n    return () => io.disconnect();\r\n  }, [ref, near, rootMargin, threshold, once]);\r\n  return near;\r\n}\r\n\r\ntype VideoSetSrc = {\r\n  webmUrl?: string;\r\n  mp4Url?: string;\r\n  poster?: SanityImageSource | string;\r\n};\r\n\r\ntype MediaLoaderProps = {\r\n  type: 'image' | 'video';\r\n  src: string | SanityImageSource | VideoSetSrc | null | undefined;\r\n  alt?: string;\r\n  id?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  objectPosition?: string;\r\n  loop?: boolean;\r\n  muted?: boolean;\r\n  playsInline?: boolean;\r\n  preload?: 'auto' | 'metadata' | 'none';\r\n  enableVisibilityControl?: boolean;\r\n  priority?: boolean;\r\n  controls?: boolean;\r\n};\r\n\r\nconst MediaLoader = ({\r\n  type,\r\n  src,\r\n  alt = '',\r\n  id,\r\n  className = '',\r\n  style = {},\r\n  objectPosition = 'center center',\r\n  loop = true,\r\n  muted = true,\r\n  playsInline = true,\r\n  preload = 'metadata',\r\n  enableVisibilityControl = true,\r\n  priority = false,\r\n  controls = false,\r\n}: MediaLoaderProps) => {\r\n  const isSSR = typeof window === 'undefined';\r\n\r\n  // Start as loaded in SSR to avoid fade-in on hydration\r\n  const [loaded, setLoaded] = useState(isSSR);\r\n  const [showMedium, setShowMedium] = useState(false);\r\n  const [showHigh, setShowHigh] = useState(false);\r\n\r\n  // Native poster control (no overlay)\r\n  const [posterRemoved, setPosterRemoved] = useState(false);\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const isNear = useNearViewport(containerRef);\r\n  const shouldStart = priority || isNear;\r\n\r\n  // If already cached, skip fade-in\r\n  useEffect(() => {\r\n    if (type === 'image' && imgRef.current?.complete) {\r\n      setLoaded(true);\r\n    }\r\n    if (type === 'video' && videoRef.current?.readyState >= 2) {\r\n      setLoaded(true);\r\n    }\r\n  }, [type]);\r\n\r\n  // IMAGE progressive upgrade\r\n  useEffect(() => {\r\n    if (type !== 'image') return;\r\n    registerImage();\r\n\r\n    const t1 = setTimeout(() => setShowMedium(true), shouldStart ? 0 : 2000);\r\n    if (shouldStart) setShowMedium(true);\r\n\r\n    const off = () => setTimeout(() => setShowHigh(true), 300);\r\n    onAllLowResLoaded(off);\r\n    const t2 = setTimeout(() => setShowHigh(true), 5000);\r\n\r\n    return () => {\r\n      clearTimeout(t1);\r\n      clearTimeout(t2);\r\n    };\r\n  }, [type, shouldStart]);\r\n\r\n  const onMediaLoaded = () => {\r\n    setLoaded(true);\r\n    if (type === 'image') notifyLowResLoaded();\r\n    if (id) {\r\n      const event = new CustomEvent('mediaReady', { detail: { id } });\r\n      window.dispatchEvent(event);\r\n    }\r\n  };\r\n\r\n  // VIDEO visibility/autoplay\r\n  useVideoVisibility(\r\n    videoRef,\r\n    containerRef,\r\n    type === 'video' && enableVisibilityControl ? 0.4 : (undefined as unknown as number)\r\n  );\r\n\r\n  // Preload video metadata only when near (avoid overfetch)\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n    let loadedOnce = false;\r\n\r\n    const start = () => {\r\n      if (loadedOnce) return;\r\n      loadedOnce = true;\r\n      v.preload = shouldStart ? (preload ?? 'metadata') : (preload ?? 'none');\r\n      try { if (shouldStart && v.preload !== 'none') v.load(); } catch {}\r\n    };\r\n\r\n    if (shouldStart) {\r\n      start();\r\n    } else {\r\n      const t = setTimeout(start, 2000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [type, shouldStart, preload]);\r\n\r\n  // ----- Video source parsing + poster URL (for native poster prop) -----\r\n  const isVideoSetObj =\r\n    typeof src === 'object' && src !== null && !('asset' in (src as any)) &&\r\n    (('webmUrl' in (src as any)) || ('mp4Url' in (src as any)));\r\n\r\n  const vs = (isVideoSetObj ? (src as VideoSetSrc) : undefined);\r\n  const legacyVideoUrl = typeof src === 'string' ? src : undefined;\r\n\r\n  const posterUrl =\r\n    vs?.poster\r\n      ? (typeof vs.poster === 'string'\r\n          ? vs.poster\r\n          : urlFor(vs.poster).width(1200).quality(80).auto('format').url())\r\n      : undefined;\r\n\r\n  // ✅ Keep native poster visible until the first **painted** frame, then remove it.\r\n  useEffect(() => {\r\n    if (type !== 'video' || !videoRef.current) return;\r\n    const v = videoRef.current;\r\n\r\n    const hidePoster = () => {\r\n      setPosterRemoved(true);\r\n      v.removeAttribute('poster');\r\n    };\r\n\r\n    const onPlay = () => {\r\n      const anyV = v as any;\r\n      if (typeof anyV.requestVideoFrameCallback === 'function') {\r\n        anyV.requestVideoFrameCallback(() => hidePoster());\r\n      } else {\r\n        // Fallback: wait until time has advanced and at least a frame is decoded\r\n        const onTime = () => {\r\n          if (v.currentTime > 0 && v.readyState >= 2) {\r\n            v.removeEventListener('timeupdate', onTime);\r\n            hidePoster();\r\n          }\r\n        };\r\n        v.addEventListener('timeupdate', onTime);\r\n        // Safety: also hide after ~1.2s if no update (rare)\r\n        const timer = setTimeout(() => {\r\n          v.removeEventListener('timeupdate', onTime);\r\n          hidePoster();\r\n        }, 1200);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    };\r\n\r\n    v.addEventListener('play', onPlay, { once: true });\r\n    return () => v.removeEventListener('play', onPlay);\r\n  }, [type]);\r\n\r\n  const hasVideoSource = Boolean(vs?.webmUrl || vs?.mp4Url || legacyVideoUrl);\r\n  if (!src || (type === 'video' && !hasVideoSource)) return null;\r\n\r\n  // ====== IMAGE ======\r\n  if (type === 'image') {\r\n    const ultraLowSrc = typeof src === 'string' ? src : getLowResImageUrl(src);\r\n    const mediumSrc   = typeof src === 'string' ? src : getMediumImageUrl(src);\r\n    const highResSrc  = typeof src === 'string' ? src : getHighQualityImageUrl(src);\r\n\r\n    const resolvedSrc = showHigh ? highResSrc : showMedium ? mediumSrc : ultraLowSrc;\r\n    if (!resolvedSrc) return null;\r\n\r\n    return (\r\n      <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n        {!loaded && (\r\n          <div className=\"absolute-inset\">\r\n            <LoadingScreen isFullScreen={false} />\r\n          </div>\r\n        )}\r\n        <img\r\n          ref={imgRef}\r\n          loading={priority ? 'eager' : undefined}\r\n          fetchPriority={showHigh || priority ? 'high' : showMedium ? 'auto' : 'low'}\r\n          id={id}\r\n          src={resolvedSrc || undefined}\r\n          alt={alt}\r\n          onLoad={onMediaLoaded}\r\n          onError={(e) => console.warn('Image failed', (e.target as HTMLImageElement).src)}\r\n          className={className}\r\n          draggable={false}\r\n          style={{\r\n            ...style,\r\n            objectFit: 'cover',\r\n            objectPosition,\r\n            opacity: loaded ? 1 : 0,\r\n            transition: isSSR ? 'none' : 'filter 0.5s ease, opacity 0.3s ease',\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ====== VIDEO ======\r\n  const showSpinner = !loaded;\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      {showSpinner && (\r\n        <div className=\"absolute-inset\">\r\n          <LoadingScreen isFullScreen={false} />\r\n        </div>\r\n      )}\r\n\r\n      <video\r\n        id={id}\r\n        ref={videoRef}\r\n        onLoadedData={onMediaLoaded}\r\n        onError={(e) => console.warn('Video failed', e)}\r\n        className={className}\r\n        style={{\r\n          ...style,\r\n          objectFit: 'cover',\r\n          objectPosition,\r\n          opacity: loaded ? 1 : 0,\r\n          transition: isSSR ? 'none' : 'opacity 0.3s ease',\r\n          pointerEvents: 'all',\r\n          zIndex: 1, // keep video above underlying backgrounds; poster is drawn by the video itself\r\n        }}\r\n        loop={loop}\r\n        muted={muted}\r\n        playsInline={playsInline}\r\n        preload={preload ?? 'metadata'}\r\n        controls={controls}\r\n        poster={posterRemoved ? undefined : posterUrl}\r\n      >\r\n        {vs?.webmUrl && <source src={vs.webmUrl || undefined} type=\"video/webm\" />}\r\n        {vs?.mp4Url  && <source src={vs.mp4Url  || undefined} type=\"video/mp4\"  />}\r\n        {!vs?.webmUrl && !vs?.mp4Url && legacyVideoUrl && (\r\n          <source src={legacyVideoUrl || undefined} />\r\n        )}\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaLoader;\r\n","// video-observer.tsx\r\nimport { useEffect } from 'react';\r\n\r\nexport const useVideoVisibility = (\r\n  videoRef: React.RefObject<HTMLVideoElement> | null,\r\n  containerRef: React.RefObject<HTMLElement> | null,\r\n  threshold: number = 0.4\r\n) => {\r\n  useEffect(() => {\r\n    if (!videoRef?.current || !containerRef?.current) return;\r\n\r\n    const t = typeof threshold === 'number' && threshold >= 0 && threshold <= 1 ? threshold : 0.4;\r\n\r\n    let observer: IntersectionObserver | undefined;\r\n\r\n    const video = videoRef.current!;\r\n    const container = containerRef.current!;\r\n\r\n    // IMPORTANT: load even when using <source> children\r\n    // (video.src is empty in that case; currentSrc is set after load())\r\n    video.load();\r\n    video.muted = true;\r\n\r\n    observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          video.play().catch(() => setTimeout(() => video.play().catch(() => {}), 500));\r\n        } else {\r\n          video.pause();\r\n        }\r\n      },\r\n      { threshold: t }\r\n    );\r\n\r\n    observer.observe(container);\r\n\r\n    // kick once if already in view\r\n    const rect = container.getBoundingClientRect();\r\n    const ratio = Math.min(Math.max((window.innerHeight - rect.top) / window.innerHeight, 0), 1);\r\n    if (ratio >= t) video.play().catch(() => {});\r\n\r\n    return () => observer?.disconnect();\r\n  }, [videoRef, containerRef, threshold]);\r\n};\r\n"],"names":["totalImages","loadedLowRes","listeners","upgradeTimeout","setUpgradeTimeout","ms","setTimeout","forEach","fn","registerImage","notifyLowResLoaded","onAllLowResLoaded","callback","push","useRef","useState","useEffect","useVideoVisibility","LoadingScreen","getLowResImageUrl","getMediumImageUrl","getHighQualityImageUrl","urlFor","jsx","_jsx","jsxs","_jsxs","useNearViewport","ref","rootMargin","threshold","once","near","setNear","current","io","IntersectionObserver","entries","some","e","isIntersecting","disconnect","observe","MediaLoader","type","src","alt","id","className","style","objectPosition","loop","muted","playsInline","preload","enableVisibilityControl","priority","controls","isSSR","window","loaded","setLoaded","showMedium","setShowMedium","showHigh","setShowHigh","posterRemoved","setPosterRemoved","videoRef","imgRef","containerRef","isNear","shouldStart","complete","readyState","t1","off","t2","clearTimeout","onMediaLoaded","event","CustomEvent","detail","dispatchEvent","undefined","v","loadedOnce","start","load","t","isVideoSetObj","vs","legacyVideoUrl","posterUrl","poster","width","quality","auto","url","hidePoster","removeAttribute","onPlay","anyV","requestVideoFrameCallback","onTime","currentTime","removeEventListener","addEventListener","timer","hasVideoSource","Boolean","webmUrl","mp4Url","ultraLowSrc","mediumSrc","highResSrc","resolvedSrc","position","height","children","isFullScreen","loading","fetchPriority","onLoad","onError","console","warn","target","draggable","objectFit","opacity","transition","showSpinner","onLoadedData","pointerEvents","zIndex","observer","video","container","entry","play","catch","pause","rect","getBoundingClientRect","ratio","Math","min","max","innerHeight","top"],"sourceRoot":""}