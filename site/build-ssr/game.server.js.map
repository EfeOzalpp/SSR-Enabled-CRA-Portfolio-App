{"version":3,"file":"game.server.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC4C;AAErC,SAASE,qBAAqBA,CAAA,EAAG;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,+CAAQ,CAAC,KAAK,CAAC;EAEvDD,gDAAS,CAAC,MAAM;IACd,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,KAAK,GAAGC,SAAS,CAACC,cAAc,GAAG,CAAC;MAC1C,MAAMC,MAAM,GAAGC,MAAM,CAACC,UAAU,GAAG,mBAAmB,CAAC,CAACC,OAAO,IAAI,KAAK;MACxE,MAAMC,KAAK,GAAGH,MAAM,CAACI,UAAU;MAC/B,MAAMC,EAAE,GAAGR,SAAS,CAACS,SAAS,IAAIT,SAAS,CAACU,MAAM,IAAKP,MAAM,CAASQ,KAAK;;MAE3E;MACA,MAAMC,KAAK,GAAG,kBAAkB,CAACC,IAAI,CAACL,EAAE,CAAC,IACtCR,SAAS,CAACc,QAAQ,KAAK,UAAU,IAAIf,KAAM,CAAC,CAAC;;MAEhD;MACA,MAAMgB,SAAS,GAAG,SAAS,CAACF,IAAI,CAACL,EAAE,CAAC;;MAEpC;MACA;MACA;MACA,MAAMQ,UAAU,GACbjB,KAAK,IAAIO,KAAK,IAAI,IAAI,IACvBM,KAAK,IACLG,SAAS,IACTb,MAAM;MAERL,eAAe,CAACmB,UAAU,CAAC;IAC7B,CAAC;IAEDlB,WAAW,CAAC,CAAC;IACbK,MAAM,CAACc,gBAAgB,CAAC,QAAQ,EAAEnB,WAAW,CAAC;IAC9CK,MAAM,CAACc,gBAAgB,CAAC,mBAAmB,EAAEnB,WAAW,CAAC;IAEzD,OAAO,MAAM;MACXK,MAAM,CAACe,mBAAmB,CAAC,QAAQ,EAAEpB,WAAW,CAAC;MACjDK,MAAM,CAACe,mBAAmB,CAAC,mBAAmB,EAAEpB,WAAW,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,YAAY;AACrB,C","sources":["webpack://personal-site/./src/utils/content-utility/real-mobile.ts"],"sourcesContent":["// useRealMobileViewport.ts\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useRealMobileViewport() {\r\n  const [isRealMobile, setIsRealMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const touch = navigator.maxTouchPoints > 0;\r\n      const coarse = window.matchMedia?.('(pointer: coarse)').matches ?? false;\r\n      const width = window.innerWidth;\r\n      const ua = navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n      // iOS detection (iPhone / iPad)\r\n      const isIOS = /iPad|iPhone|iPod/.test(ua) ||\r\n        (navigator.platform === 'MacIntel' && touch); // iPadOS pretends to be Mac\r\n\r\n      // Android detection\r\n      const isAndroid = /Android/.test(ua);\r\n\r\n      // Consider it real mobile if:\r\n      // - Touch exists, and viewport is small, or\r\n      // - Known mobile UA\r\n      const realMobile =\r\n        (touch && width <= 1024) ||\r\n        isIOS ||\r\n        isAndroid ||\r\n        coarse;\r\n\r\n      setIsRealMobile(realMobile);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    window.addEventListener('orientationchange', checkMobile);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', checkMobile);\r\n      window.removeEventListener('orientationchange', checkMobile);\r\n    };\r\n  }, []);\r\n\r\n  return isRealMobile;\r\n}\r\n"],"names":["useEffect","useState","useRealMobileViewport","isRealMobile","setIsRealMobile","checkMobile","touch","navigator","maxTouchPoints","coarse","window","matchMedia","matches","width","innerWidth","ua","userAgent","vendor","opera","isIOS","test","platform","isAndroid","realMobile","addEventListener","removeEventListener"],"sourceRoot":""}