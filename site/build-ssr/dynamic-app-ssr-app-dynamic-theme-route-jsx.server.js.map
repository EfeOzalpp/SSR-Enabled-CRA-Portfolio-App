{"version":3,"file":"dynamic-app-ssr-app-dynamic-theme-route-jsx.server.js","mappings":"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","sources":["webpack://personal-site/./src/dynamic-app/lib/fetchSVGIcons.js","webpack://personal-site/./src/dynamic-app/lib/fetchUser.js","webpack://personal-site/./src/dynamic-app/preload-dynamic-app.ts","webpack://personal-site/./src/dynamic-app/ssr-app/dynamic-theme.route.jsx"],"sourcesContent":["/* Fetch SVG icons */\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport default async function fetchSVGIcons() {\r\n  const query = `*[_type == \"svgIcon\"]{\r\n    title,\r\n    icon,                         // inline SVG string (portable text / string)\r\n    \"url\": file.asset->url        // optional file URL if present in schema\r\n  }`;\r\n  const icons = await sanityClient.fetch(query);\r\n  return icons;\r\n}","// lib/fetchUser.ts\r\nimport sanityClient from '../../utils/sanity';\r\n\r\nexport const fetchImages = async (sortOption = 'default') => {\r\n  let orderClause = '';\r\n  switch (sortOption) {\r\n    case 'titleAsc':  orderClause = '| order(title asc)'; break;\r\n    case 'titleDesc': orderClause = '| order(title desc)'; break;\r\n    case 'dateAsc':   orderClause = '| order(_createdAt asc)'; break;\r\n    case 'dateDesc':  orderClause = '| order(_createdAt desc)'; break;\r\n  }\r\n\r\n  const query = `*[_type == \"imageAsset\"] ${orderClause} {\r\n    _id,\r\n    title,\r\n    description,\r\n    image1,         // keep full Sanity image object\r\n    image2,         // same\r\n    caption1,\r\n    alt1,\r\n    alt2,\r\n    iconName\r\n  }`;\r\n\r\n  try {\r\n    const data = await sanityClient.fetch(query);\r\n    return data; // pass raw; AppMedia will render responsively\r\n  } catch (error) {\r\n    console.error('Error fetching images', error);\r\n    return [];\r\n  }\r\n};\r\n","// src/dynamic-app/preload-dynamic-app.ts\r\nimport fetchSVGIcons from './lib/fetchSVGIcons';\r\nimport { fetchImages } from './lib/fetchUser';\r\n\r\nexport type Cache = { icons?: Record<string, string>; images?: any[] };\r\n\r\ntype IconLike = { title?: string; icon?: string; url?: string };\r\n\r\nlet cache: Cache = {};\r\nlet inFlight: Promise<Cache> | null = null;\r\n\r\nexport function getPreloadedDynamicApp(): Cache {\r\n  return cache;\r\n}\r\n\r\nexport function primeFromSSR(data?: Partial<Cache>) {\r\n  if (!data) return;\r\n  cache = { ...cache, ...data };\r\n}\r\n\r\nfunction toIconMap(list: IconLike[]): Record<string, string> {\r\n  return list.reduce((acc, it) => {\r\n    if (!it?.title) return acc;\r\n    const val = it.icon ?? it.url; // inline SVG takes precedence; else URL\r\n    if (typeof val === 'string' && val.length > 0) acc[it.title] = val;\r\n    return acc;\r\n  }, {} as Record<string, string>);\r\n}\r\n\r\n/** Wait for current preloading (if any), then return cache */\r\nexport async function whenDynamicPreloadReady(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) {\r\n    await inFlight;\r\n    return cache;\r\n  }\r\n  return cache;\r\n}\r\n\r\nexport async function ensureIconsPreload(): Promise<Record<string, string>> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.icons && inFlight) {\r\n    await inFlight;\r\n    return cache.icons || {};\r\n  }\r\n  if (cache.icons) return cache.icons;\r\n\r\n  let iconsRaw: unknown;\r\n  try {\r\n    iconsRaw = await fetchSVGIcons();\r\n  } catch {\r\n    iconsRaw = [];\r\n  }\r\n  const list = Array.isArray(iconsRaw) ? (iconsRaw as IconLike[]) : [];\r\n  const icons = toIconMap(list);\r\n  cache.icons = icons;\r\n  return icons;\r\n}\r\n\r\nexport async function ensureImagesPreload(): Promise<any[]> {\r\n  // If a full preloading is in-flight, wait for it instead of double-fetching\r\n  if (!cache.images && inFlight) {\r\n    await inFlight;\r\n    return cache.images || [];\r\n  }\r\n  if (cache.images) return cache.images;\r\n\r\n  let imagesRaw: unknown;\r\n  try {\r\n    imagesRaw = await fetchImages();\r\n  } catch {\r\n    imagesRaw = [];\r\n  }\r\n  const images = Array.isArray(imagesRaw) ? (imagesRaw as any[]) : [];\r\n  cache.images = images;\r\n  return images;\r\n}\r\n\r\n/** Convenience: ensure both icons + images (with in-flight dedupe) */\r\nexport async function ensureDynamicPreload(): Promise<Cache> {\r\n  if (cache.icons && cache.images) return cache;\r\n  if (inFlight) return inFlight;\r\n\r\n  inFlight = Promise.all([ensureIconsPreload(), ensureImagesPreload()])\r\n    .then(([icons, images]) => {\r\n      cache = { icons, images };\r\n      return cache;\r\n    })\r\n    .finally(() => {\r\n      inFlight = null;\r\n    });\r\n\r\n  return inFlight;\r\n}\r\n\r\n// Optional: hydrate from SSR\r\ndeclare global {\r\n  interface Window {\r\n    __DYNAMIC_PRELOAD__?: Cache;\r\n  }\r\n}\r\nif (typeof window !== 'undefined' && (window as any).__DYNAMIC_PRELOAD__) {\r\n  primeFromSSR((window as any).__DYNAMIC_PRELOAD__);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport loadable from '@loadable/component';\r\nimport { useSsrData } from '../../utils/context-providers/ssr-data-context';\r\nimport { primeFromSSR } from '..//preload-dynamic-app';\r\n\r\n// Load the existing client page (no SSR false flag here)\r\nconst DynamicTheme = loadable(() => import('../../DynamicTheme.jsx') , { ssr: false });\r\n\r\nexport default function DynamicThemeRoute() {\r\n  // If your server provided preloaded data, push it into the shared cache\r\n  const ssr = useSsrData();\r\n  const preload = ssr?.preloaded?.dynamicTheme; // { icons, images } if your server sets it\r\n\r\n  useEffect(() => {\r\n    if (preload) primeFromSSR(preload);\r\n  }, [preload]);\r\n\r\n  return <DynamicTheme />;\r\n}\r\n"],"names":["sanityClient","fetchSVGIcons","query","icons","fetch","fetchImages","sortOption","orderClause","data","error","console","cache","inFlight","getPreloadedDynamicApp","primeFromSSR","toIconMap","list","reduce","acc","it","title","val","icon","url","length","whenDynamicPreloadReady","images","ensureIconsPreload","iconsRaw","Array","isArray","ensureImagesPreload","imagesRaw","ensureDynamicPreload","Promise","all","then","finally","window","__DYNAMIC_PRELOAD__","React","useEffect","loadable","useSsrData","jsx","_jsx","DynamicTheme","resolved","chunkName","isReady","props","key","resolve","__webpack_modules__","importAsync","requireAsync","requireSync","id","__webpack_require__","eval","require","resolveWeak","ssr","DynamicThemeRoute","preload","preloaded","dynamicTheme"],"sourceRoot":""}