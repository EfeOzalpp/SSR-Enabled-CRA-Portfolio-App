{"version":3,"file":"src_utils_loading_loading_tsx.server.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AACpB;AACa;AAEH;AAAA;AAQ1C,MAAMO,aAAa,GAAGA,CAAC;EAAEC,YAAY,GAAG,IAAI;EAAEC,OAAO,GAAG;AAAwB,CAAC,KAAK;EACpF,MAAMC,SAAS,GAAGT,6CAAM,CAAiB,IAAI,CAAC;EAC9C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGV,+CAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,+CAAQ,CAAC,KAAK,CAAC;;EAEvC;EACAF,gDAAS,CAAC,MAAM;IACd,MAAMe,CAAC,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAAC,IAAI,CAAC,EAAEL,OAAO,CAAC;IAClD,OAAO,MAAMQ,YAAY,CAACF,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;;EAEb;EACAT,gDAAS,CAAC,MAAM;IACd,IAAI,CAACa,IAAI,IAAI,CAACH,SAAS,CAACQ,OAAO,EAAE;IACjC,MAAMC,KAAK,GAAGC,MAAM,CAACC,UAAU;IAC/B,IAAIF,KAAK,IAAI,GAAG,EAAE;MAChBP,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM,IAAIO,KAAK,IAAI,IAAI,EAAE;MACxBP,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM;MACLA,OAAO,CAAC,EAAE,CAAC;IACb;IAEA,MAAMU,IAAI,GAAGnB,+DAAoB,CAAC;MAChCO,SAAS,EAAEA,SAAS,CAACQ,OAAO;MAC5BM,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAEvB,8CAAOA;IACxB,CAAC,CAAC;IAEF,OAAO,MAAMkB,IAAI,CAACM,OAAO,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC;EAEV,IAAI,CAACA,IAAI,EAAE;IACT;IACA,OACEP,+DAAA;MACEuB,SAAS,EAAE,0BAA0BrB,YAAY,GAAG,YAAY,GAAG,WAAW,EAAG;MACjF,eAAY;IAAM,CACnB,CAAC;EAEN;EAEA,OACEF,+DAAA;IAAKuB,SAAS,EAAE,0BAA0BrB,YAAY,GAAG,YAAY,GAAG,WAAW,EAAG;IAAAsB,QAAA,EACpFxB,+DAAA;MACEuB,SAAS,EAAC,gBAAgB;MAC1BE,GAAG,EAAErB,SAAU;MACfsB,KAAK,EAAE;QACLb,KAAK,EAAE,GAAGR,IAAI,IAAI;QAClBsB,MAAM,EAAE,GAAGtB,IAAI;MACjB;IAAE,CACH;EAAC,CACC,CAAC;AAEV,CAAC;AAED,iEAAeJ,aAAa,E","sources":["webpack://personal-site/./src/styles/loading-overlay.css","webpack://personal-site/./src/utils/loading/loading.tsx"],"sourcesContent":["","import { useEffect, useRef, useState } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport loading from '../../svg/loading.json';\r\n\r\nimport '../../styles/loading-overlay.css';\r\n\r\ntype LoadingScreenProps = {\r\n  isFullScreen?: boolean;\r\n  /** Delay before showing loader (ms) */\r\n  delayMs?: number;\r\n};\r\n\r\nconst LoadingScreen = ({ isFullScreen = true, delayMs = 400 }: LoadingScreenProps) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const [size, setSize] = useState(70); // default to largest\r\n  const [show, setShow] = useState(false);\r\n\r\n  // Delay before showing loader\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setShow(true), delayMs);\r\n    return () => clearTimeout(t);\r\n  }, [delayMs]);\r\n\r\n  // Lottie setup (only if visible)\r\n  useEffect(() => {\r\n    if (!show || !container.current) return;\r\n    const width = window.innerWidth;\r\n    if (width <= 767) {\r\n      setSize(32);\r\n    } else if (width <= 1024) {\r\n      setSize(40);\r\n    } else {\r\n      setSize(56);\r\n    }\r\n\r\n    const anim = lottie.loadAnimation({\r\n      container: container.current,\r\n      renderer: 'svg',\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: loading,\r\n    });\r\n\r\n    return () => anim.destroy();\r\n  }, [show]);\r\n\r\n  if (!show) {\r\n    // Empty placeholder to keep structure aligned\r\n    return (\r\n      <div\r\n        className={`loading-screen-wrapper ${isFullScreen ? 'fullscreen' : 'contained'}`}\r\n        aria-hidden=\"true\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`loading-screen-wrapper ${isFullScreen ? 'fullscreen' : 'contained'}`}>\r\n      <div\r\n        className=\"loading-lottie\"\r\n        ref={container}\r\n        style={{\r\n          width: `${size}px`,\r\n          height: `${size}px`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n"],"names":["useEffect","useRef","useState","lottie","loading","jsx","_jsx","LoadingScreen","isFullScreen","delayMs","container","size","setSize","show","setShow","t","setTimeout","clearTimeout","current","width","window","innerWidth","anim","loadAnimation","renderer","loop","autoplay","animationData","destroy","className","children","ref","style","height"],"sourceRoot":""}